#!/bin/sh

#   -------------------------------------------------------------
#   Phabricator — Nasqueron instance
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Author:         Sébastien Santoro aka Dereckson
#   Project:        Nasqueron
#   Created:        2015-04-22
#   Description:    Phabricator instance for Nasqueron
#   License:        Trivial work, not eligible to copyright
#   Image:          nasqueron/phabricator
#   Source file:    roles/phabricator/containers/files/run-devcentral.sh
#   -------------------------------------------------------------
#
#   <auto-generated>
#       This file is managed by our rOPS SaltStack repository.
#
#       Changes to this file may cause incorrect behavior
#       and will be lost if the state is redeployed.
#   </auto-generated>

#   -------------------------------------------------------------
#   Container parameters
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#IMAGE=nasqueron/phabricator
IMAGE=nasqueron/devcentral:2022-03-28.init-fix
INSTANCE_NAME=devcentral
PORT=31080
DOMAIN=$INSTANCE_NAME.nasqueron.org
DATA_DIRECTORY=/srv/phabricator/$INSTANCE_NAME
MYSQL_INSTANCE=acquisitariat

#   -------------------------------------------------------------
#   Phabricator parameters
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

PHABRICATOR_URL=http://$DOMAIN
PHABRICATOR_TITLE="Nasqueron DevCentral"
PHABRICATOR_ALT_FILE_DOMAIN="https://devcentral.nasqueron-user-content.org/"

#   -------------------------------------------------------------
#   Deployment of our Phabricator code parameters
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

REPO_LOGIN=git
REPO_HOST=bitbucket.org
PHABRICATOR_PROD_REPO="ssh://git@bitbucket.org/nasqueron/devcentral-phabricator"
PHABRICATOR_PROD_BRANCH=production

#   -------------------------------------------------------------
#   Ensure container isn't already running
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

docker-container-status $INSTANCE_NAME > /dev/null
if [ "$?" -lt 2 ]; then
	echo "Container is already running."
	echo "To force relaunch, try docker stop $INSTANCE_NAME ; docker rm $INSTANCE_NAME ; $0"
	exit 1
fi

#   -------------------------------------------------------------
#   Container launch
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

docker run -t -d \
	--link $MYSQL_INSTANCE:mysql \
	-v $DATA_DIRECTORY/repo:/var/repo \
	-v $DATA_DIRECTORY/conf:/opt/phabricator/conf \
	-p $PORT:80 \
        -p 5022:5022 \
	-e PHABRICATOR_URL=$PHABRICATOR_URL \
	-e PHABRICATOR_TITLE="$PHABRICATOR_TITLE" \
	-e PHABRICATOR_ALT_FILE_DOMAIN="$PHABRICATOR_ALT_FILE_DOMAIN" \
	-e PHABRICATOR_PROD_REPO=$PHABRICATOR_PROD_REPO \
	-e PHABRICATOR_PROD_BRANCH=$PHABRICATOR_PROD_BRANCH \
	-e PHABRICATOR_USE_MAILGUN=1 \
	-e PHABRICATOR_DOMAIN=$DOMAIN \
	--name $INSTANCE_NAME $IMAGE /usr/local/sbin/runsvdir-init

#   -------------------------------------------------------------
#   DevCentral specific branch deployment
#
#   Deploys our version
#   As we change static resources, restart php-fpm is a good idea:
#   if someone asks the page while we were pulling our version,
#   the old celerity map would be kept by APCu.
#   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

docker exec $INSTANCE_NAME sh -c 'mkdir -p /root/.ssh && \
	cp /opt/phabricator/conf/deploy-keys/* /root/.ssh'
docker exec $INSTANCE_NAME ssh -o StrictHostKeyChecking=no ${REPO_LOGIN}@${REPO_HOST}
docker exec $INSTANCE_NAME sh -c 'cd /opt/phabricator && \
	git remote add private "$PHABRICATOR_PROD_REPO" && \
	git fetch --all && \
	git checkout $PHABRICATOR_PROD_BRANCH && \
	sv restart php-fpm && sv restart phd'

echo "Deployment done at $(date)."
exit 0
